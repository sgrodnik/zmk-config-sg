/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define LCSPC LCTRL SPACE
#define RCSPC RCTRL SPACE
#define hA    LGUI A
#define hS    LALT S
#define hD    LSHIFT D
#define hF    LCTRL F
#define hJ    RCTRL J
#define hK    RSHIFT K
#define hL    RALT L
#define hSEMI RGUI SEMI

/ {
    behaviors {

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            // retro-tap;
        };

        sm: space_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

    };
    
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_ret {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp RET>;
        };
        combo_bsp {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp BSPC>;
        };
        combo_esc2 {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp ESC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
//     Q     W     E     R     T          ━┳━      Y     U     I     O     P     |tap
//                                        ━┻━                                    |hold
//     A     S     D     F     G          ━┳━      H     J     K     L     ;     |tap
//     gui   alt   shift ctrl             ━┻━            ctrl  shift alt   gui   |hold
//     Z     X     C     V     B     ?5   ━┳━      N     M     ,     .     /     |tap
//     Lsft                               ━┻━                        .     Rsft  |hold
//                 ctrl  ctrl  gui   SPC  ━┳━ SPC  L1    ret   mo2               |tap
//                                   ctrl ━┻━ ctrl del                           |hold
           bindings = <
//  1           2      3         4         5             thumbL    thumbR    5         4       3         2       1
    &kp Q       &kp W  &kp E     &kp R     &kp T                             &kp Y     &kp U   &kp I     &kp O   &kp P
    &hm hA      &hm hS &hm hD    &hm hF    &kp G                             &kp H     &hm hJ  &hm hK    &hm hL  &hm hSEMI
    &mt LSHFT Z &kp X  &kp C     &kp V     &kp B         &kp N               &kp N     &kp M   &kp COMMA &kp DOT &mt RSHFT FSLH
                       &kp LCTRL &kp LCTRL &mt LGUI BSPC &sm LCSPC &sm RCSPC &lt 1 DEL &kp RET &mo 2
            >;
        };
        numbers {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  1  |    2   |  3     |  4  |  5  | |  6  |  7  |  8  |  9  |  0  |
// TAB | BT_PRV | BT_NXT | VOL-| VOL+| |  <  |  v  |  ∧  |  >  |  '  |
// Lsft| BT_SEL0| BT_CLR | MUTE|     | | HOME| END | PGUP| PGDN| Rsft|
//               | LCTL | LMOD| LALT | | Num |     | BL-reset |
           bindings = <
            &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
            &kp TAB &bt BT_PRV &bt BT_NXT &kp C_VOL_DN &kp C_VOL_UP &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp SQT
            &kp LSHFT &bt BT_SEL 0 &bt BT_CLR &kp C_MUTE &none &kp HOME &kp HOME &kp END &kp PG_UP &kp PG_DN &kp RSHFT
            &kp LCTRL &kp LGUI &kp LALT &trans &none &bootloader &kp Q &kp W
            >;
        };
        symbols {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ESC |  F1 |  F2 |  F3 |  F4 | | OUT_USB | OUT_BLE |        |  =  |  -   |
// CAPS|  F5 |  F6 |  F7 |  F8 | |    [    |    ]    |        |  `  |  \   |
// LSFT|  F9 | F10 | F11 | F12 | |         |         |        |     | RSFT |
//         | LCTL | LMOD| LALT | |  RESET  |         |   SYM  |
           bindings = <
            &kp ESC &kp F1 &kp F2 &kp F3 &kp F4 &out OUT_USB &out OUT_BLE &none  &kp EQUAL &kp MINUS
            &kp CAPS &kp F5 &kp F6 &kp F7 &kp F8 &kp LBKT &kp RBKT &none &kp GRAVE &kp BSLH
            &kp LSHFT &kp F9 &kp F10 &kp F11 &kp F12 &none  &none &none &none &none &kp RSHFT
            &kp LCTRL &kp LGUI &kp LALT &sys_reset &none &trans &kp Q &kp W
           >;
        };
    };
};
