/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <behaviors/rgbled_widget.dtsi>
#include <behaviors/num_word.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define hA    LGUI A
#define hS    LALT S
#define hD    LSHIFT D
#define hF    LCTRL F
#define hJ    RCTRL J
#define hK    RSHIFT K
#define hL    RALT L
#define hSEMI RGUI SEMI

/ {
    macros {
      ZMK_MACRO(task_manager, wait-ms = <30>; tap-ms = <40>; bindings
          = <&macro_press   &kp LCTRL>
          , <&macro_press   &kp LSHIFT>
          , <&macro_tap     &kp ESC>
          , <&macro_release &kp LSHIFT>
          , <&macro_release &kp LCTRL>
          ;
      )

      ZMK_MACRO(copy_all, wait-ms = <30>; tap-ms = <40>; bindings
          = <&macro_tap   &kp LC(HOME)>
          , <&macro_tap   &kp LC(LS(END))>
          , <&macro_tap   &kp LC(C)>
          ;
      )

      ZMK_MACRO(paste_all, wait-ms = <30>; tap-ms = <40>; bindings
          = <&macro_tap   &kp LC(HOME)>
          , <&macro_tap   &kp LC(LS(END))>
          , <&macro_tap   &kp LC(V)>
          ;
      )

      ZMK_MACRO(macro1, wait-ms = <30>; tap-ms = <40>; bindings
          = <&macro_tap &kp RPAR &kp LS(O) &kp RPAR &kp LS(O) &kp RET> ;
      )

        lm: layer_mod {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_param_2to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_param_2to1>
                , <&macro_release &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };

        l1sh_macro: layer1_shift {
            compatible = "zmk,behavior-macro";
            wait-ms = <30>;
            tap-ms = <30>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 1 &kp LSHFT>
                , <&macro_pause_for_release>
                , <&macro_release &mo 1 &kp LSHFT>
                ;
        };

      ZMK_MACRO(m_dot, wait-ms = <30>; tap-ms = <40>; bindings // Alt + 46 = .
          = <&macro_press   &kp LALT>
          , <&macro_tap     &kp KP_N4 &kp KP_N6>
          , <&macro_release &kp LALT>
          ;
      )

      ZMK_MACRO(m_com, wait-ms = <30>; tap-ms = <40>; bindings // Alt + 44 = ,
          = <&macro_press   &kp LALT>
          , <&macro_tap     &kp KP_N4 &kp KP_N4>
          , <&macro_release &kp LALT>
          ;
      )

      ZMK_MACRO(m_slash, wait-ms = <30>; tap-ms = <40>; bindings // Alt + 47 = /
          = <&macro_press   &kp LALT>
          , <&macro_tap     &kp KP_N4 &kp KP_N7>
          , <&macro_release &kp LALT>
          ;
      )

      ZMK_MACRO(m_backslash, wait-ms = <30>; tap-ms = <40>; bindings // Alt + 92 = backslash
          = <&macro_press   &kp LALT>
          , <&macro_tap     &kp KP_N9 &kp KP_N2>
          , <&macro_release &kp LALT>
          ;
      )

      ZMK_MACRO(m_search, wait-ms = <30>; tap-ms = <40>; bindings
          = <&macro_tap &kp LC(C) &kp LC(F) &kp LC(V)>;
      )
    };

    behaviors {

      ht: left_positional_hold_tap {  // allows shift with mouse
          compatible = "zmk,behavior-hold-tap";
          #binding-cells = <2>;
          flavor = "tap-unless-interrupted";
          tapping-term-ms = <400>;
          quick-tap-ms = <200>;
          bindings = <&kp>, <&kp>;
      };

        hm: homerow_mods {  // allows repeating z
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            // retro-tap;
        };

        space1sh: space_layer1_shift {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&lt 1 SPACE>, <&l1sh_macro>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        td_paren_bracket: tap_dance_paren_bracket {
            compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp LBKT>; // ( [
        };

        td_brace_angle: tap_dance_brace_angle {
            compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>;
            bindings = <&kp RBRC>, <&kp LT>; // { <
        };

        td_dot: tap_dance_dot_comma {
            compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>;
            bindings = <&m_dot>, <&m_com>;
        };

        td_slash: tap_dance_slash_backslash {
            compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>;
            bindings = <&m_slash>, <&m_backslash>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_del   { timeout-ms = <50>; key-positions = <10 11 12>; bindings = <&kp DEL      >; layers = <0 1>; };  // ASD
        combo_del2  { timeout-ms = <50>; key-positions = <11 12 13>; bindings = <&kp DEL      >; layers = <0 1>; };  // SDF
        combo_esc   { timeout-ms = <50>; key-positions = <11 13   >; bindings = <&kp ESC      >; layers = <0 1>; };  // SF
        combo_bsp   { timeout-ms = <50>; key-positions = <11 12   >; bindings = <&kp BSPC     >; layers = <0 1>; };  // SD
        combo_ret   { timeout-ms = <50>; key-positions = <12 13   >; bindings = <&kp RET      >; layers = <0 1>; };  // DF
        combo_retR  { timeout-ms = <50>; key-positions = <16 17   >; bindings = <&kp RET      >; layers = <0 1>; };  // JK
        combo_cut   { timeout-ms = <50>; key-positions = <20 21   >; bindings = <&kp LC(X)    >; layers = <0  >; };  // ZX
        combo_copy  { timeout-ms = <50>; key-positions = <21 22   >; bindings = <&kp LC(INS)  >; layers = <0  >; };  // XC
        combo_paste { timeout-ms = <50>; key-positions = <22 23   >; bindings = <&kp LS(INS)  >; layers = <0  >; };  // CV
        // combo_home  { timeout-ms = <50>; key-positions = <11 12   >; bindings = <&kp HOME     >; layers = <2  >; };  // SD
        // combo_end   { timeout-ms = <50>; key-positions = <12 13   >; bindings = <&kp END      >; layers = <2  >; };  // DF
        combo_rbkt  { timeout-ms = <50>; key-positions = < 7  8  9>; bindings = <&kp RBKT     >; layers = <0  >; };  // IOP
        combo_lbkt  { timeout-ms = <50>; key-positions = < 8  9   >; bindings = <&kp LBKT     >; layers = <0  >; };  // OP
        combo_bslh  { timeout-ms = <50>; key-positions = <28 29   >; bindings = <&kp BSLH     >; layers = <0  >; };  // >?
        combo_apos  { timeout-ms = <50>; key-positions = <18 19   >; bindings = <&kp APOS     >; layers = <0  >; };  // L:
        combo_task  { timeout-ms = <50>; key-positions = <00 01   >; bindings = <&task_manager>; layers = <0  >; };  // QW
        combo_cshf  { timeout-ms = <50>; key-positions = <20 13   >; bindings = <&sk LS(LCTRL)>; layers = <0  >; };  // ZF
        combo_caps  { timeout-ms = <50>; key-positions = <10 13   >; bindings = <&kp CAPS     >; layers = <0  >; };  // AF
        combo_copyA { timeout-ms = <50>; key-positions = <21 22   >; bindings = <&copy_all    >; layers = <1  >; };  // XC
        combo_pastA { timeout-ms = <50>; key-positions = <22 23   >; bindings = <&paste_all   >; layers = <1  >; };  // CV
        combo_macro1{ timeout-ms = <50>; key-positions = < 7 16   >; bindings = <&macro1      >; layers = <0  >; };  // IJ
        // combo_sh1   { timeout-ms = <50>; key-positions = <13 34   >; bindings = <&l1sh_macro  >; layers = <0 1>; slow-release;};  // FSpace
        // combo_sh1_  { timeout-ms = <50>; key-positions = < 2  3   >; bindings = <&l1sh_macro  >; layers = <0 1>; slow-release;};  // ER
        combo_capsw { key-positions = <10 20>; bindings = <&caps_word>;        layers = <0>; };  // AZ
        combo_capsw2{ key-positions = <12 17>; bindings = <&caps_word>;        layers = <0>; };  // DK
        combo_brack1{ key-positions = <03 04>; bindings = <&td_paren_bracket>; layers = <0>; };  // RT
        combo_brack2{ key-positions = <13 14>; bindings = <&td_brace_angle>;   layers = <0>; };  // FG
        combo_slash { key-positions = <23 24>; bindings = <&td_slash>;         layers = <0>; };  // VB
        combo_search{ key-positions = <22 13>; bindings = <&m_search>;         layers = <0>; };  // CF
    };

    keymap {
        compatible = "zmk,keymap";

        default0 { bindings = <
//╭── 00      ──┬── 01     ──┬── 02     ──┬── 03     ──┬── 04     ──╮                        ╭── 05      ──┬── 06    ──┬── 07    ──┬── 08   ──┬── 09       ──╮
  &kp Q         &kp W        &kp E        &kp R        &kp T                                 &kp Y         &kp U       &kp I       &kp O      &kp P
//├── 10      ──┼── 11     ──┼── 12     ──┼── 13     ──┼── 14     ──┤                        ├── 15      ──┼── 16    ──┼── 17    ──┼── 18   ──┼── 19       ──┤
  &hm LGUI A    &hm LALT S   &hm LSHFT D  &hm LCTRL F  &kp G                                 &kp H         &hm hJ      &hm hK      &hm hL     &hm hSEMI
//├── 20      ──┼── 21     ──┼── 22     ──┼── 23     ──┼── 24     ──┤                        ├── 25      ──┼── 26    ──┼── 27    ──┼── 28   ──┼── 29       ──┤
  &ht LSHFT Z   &ht LCTRL X  &kp C        &kp V        &kp B                                 &kp N         &kp M       &kp COMMA   &kp DOT    &ht RSHFT FSLH
//╰──         ──┼── 30     ──┴── 31     ──┼── 32     ──┼── 33     ──┼── 34    ──╮╭── 35    ──┼── 36      ──┼── 37    ──┼── 38    ──┼── 39   ──┴──          ──╯
               &sk LS(LCTRL) &lm 1 LSHIFT &lt 3 CAPS   &lt 2 TAB    &space1sh    &l1sh_macro &lt 2 SPACE   &lt 3 SPACE &mo 4       &num_word 1>; };
//              ╰──        ──┴──        ──┴──        ──┴──        ──┴──       ──╯╰──       ──┴──         ──┴──       ──┴──       ──┴──      ──╯
        layer1Num { bindings = <
//╭─00─       ──┬─01─      ──┬─02─      ──┬─03─      ──┬─04─      ──╮                         ╭─05─      ──┬─06─     ──┬─07─     ──┬─08─    ──┬─09─      ──╮
  &kp GRAVE     &mt F7 N7    &mt F8 N8    &mt F9 N9    &mt F12 &td_dot                        &msc SCRL_UP &trans      &kp INSERT  &trans     &kp PSCRN
//├─10─       ──┼─11─      ──┼─12─      ──┼─13─      ──┼─14─      ──┤                         ├─15─      ──┼─16─     ──┼─17─     ──┼─18─    ──┼─19─      ──┤
  &kp MINUS     &mt F4 N4    &mt F5 N5    &mt F6 N6    &mt F10 N0                             &msc SCRL_DOWN &mmv MOVE_LEFT &mmv MOVE_UP &mmv MOVE_RIGHT &trans
//├─20─       ──┼─21─      ──┼─22─      ──┼─23─      ──┼─24─      ──┤                         ├─25─      ──┼─26─     ──┼─27─     ──┼─28─    ──┼─29─      ──┤
  &kp EQUAL     &mt F1 N1    &mt F2 N2    &mt F3 N3    &mt F11 APOS                           &trans       &trans      &mmv MOVE_DOWN      &trans     &trans
//╰──         ──┼── 30     ──┴── 31     ──┼── 32     ──┼── 33     ──┼── 34    ──╮╭── 35     ──┼── 36     ──┼── 37    ──┼── 38    ──┼── 39   ──┴──        ──╯
                &trans       &trans       &trans       &kp SEMI     &trans       &trans       &trans       &trans      &trans      &trans     >; };
//              ╰──        ──┴──        ──┴──        ──┴──        ──┴──       ──╯╰──        ──┴──        ──┴──       ──┴──       ──┴──      ──╯
        layer2Nav { bindings = <
//╭─00─       ──┬─01─      ──┬─02─      ──┬─03─      ──┬─04─      ──╮                         ╭─05─      ──┬─06─     ──┬─07─     ──┬─08─    ──┬─09─      ──╮
  &kp C_BRI_UP  &kp HOME     &kp UP       &kp END      &kp PG_UP                              &trans       &trans      &kp UP      &trans     &trans
//├─10─       ──┼─11─      ──┼─12─      ──┼─13─      ──┼─14─      ──┤                         ├─15─      ──┼─16─     ──┼─17─     ──┼─18─    ──┼─19─      ──┤
  &kp C_BRI_DN  &kp LEFT     &kp DOWN     &kp RIGHT    &kp PG_DN                              &kp HOME     &kp LEFT    &kp DOWN    &kp RIGHT  &kp END
//├─20─       ──┼─21─      ──┼─22─      ──┼─23─      ──┼─24─      ──┤                         ├─25─      ──┼─26─     ──┼─27─     ──┼─28─    ──┼─29─      ──┤
  &kp C_VOL_DN  &kp C_VOL_UP &kp C_PLAY_PAUSE &kp C_NEXT &trans                               &trans       &trans      &trans      &trans     &trans
//╰──         ──┼── 30     ──┴── 31     ──┼── 32     ──┼── 33     ──┼── 34    ──╮╭── 35     ──┼── 36     ──┼── 37    ──┼── 38    ──┼── 39   ──┴──        ──╯
                &trans       &trans       &trans       &trans       &kp LCTRL    &trans       &trans       &trans      &trans      &trans     >; };
//              ╰──        ──┴──        ──┴──        ──┴──        ──┴──       ──╯╰──        ──┴──        ──┴──       ──┴──       ──┴──      ──╯
        layer3Fun { bindings = <
//╭─00─       ──┬─01─      ──┬─02─      ──┬─03─      ──┬─04─      ──╮                         ╭─05─      ──┬─06─     ──┬─07─     ──┬─08─    ──┬─09─      ──╮
  &kp C_BRI_UP  &kp F7       &kp F8       &kp F9       &kp F10                                &out OUT_USB &out OUT_BLE &trans &studio_unlock &bootloader
//├─10─       ──┼─11─      ──┼─12─      ──┼─13       ──┼─14─      ──┤                         ├─15─      ──┼─16─     ──┼─17─     ──┼─18─    ──┼─19─      ──┤
  &kp C_BRI_DN  &kp F4       &kp F5       &kp F6       &kp F11                                &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
//├─20─       ──┼─21─      ──┼─22─      ──┼─23       ──┼─24─      ──┤                         ├─25─      ──┼─26─     ──┼─27─     ──┼─28─    ──┼─29─      ──┤
  &trans        &kp F1       &kp F2       &kp F3       &kp F12                                &bt BT_CLR   &trans      &trans      &ind_bat     &ind_con
//╰──         ──┼── 30     ──┴── 31     ──┼── 32     ──┼── 33     ──┼── 34    ──╮╭── 35     ──┼── 36     ──┼── 37    ──┼── 38    ──┼── 39   ──┴──        ──╯
                &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans      &trans      &trans     >; };
//              ╰──        ──┴──        ──┴──        ──┴──        ──┴──       ──╯╰──        ──┴──        ──┴──       ──┴──       ──┴──      ──╯
        layer4Num2 { bindings = <
//╭─00─       ──┬─01─      ──┬─02─      ──┬─03─      ──┬─04─       ──╮                        ╭─05─      ──┬─06─     ──┬─07─     ──┬─08─    ──┬─09─      ──╮
  &kp N1        &kp N2       &kp N3       &kp N4       &kp N5                                 &kp N6       &kp N7      &kp N8      &kp N9     &kp N0
//├─10─       ──┼─11─      ──┼─12─      ──┼─13─      ──┼─14─       ──┤                        ├─15─      ──┼─16─     ──┼─17─     ──┼─18─    ──┼─19─      ──┤
  &kp EXCL      &kp AT       &kp HASH     &kp DLLR     &kp PRCNT                              &kp CARET    &kp AMPS    &kp STAR    &kp LPAR   &kp RPAR
//├─20─       ──┼─21─      ──┼─22─      ──┼─23─      ──┼─24─       ──┤                        ├─25─      ──┼─26─     ──┼─27─     ──┼─28─    ──┼─29─      ──┤
  &trans        &trans       &trans       &trans       &trans                                 &trans       &trans      &trans      &trans     &trans
// ╰──        ──┼── 30     ──┼── 31     ──┼── 32     ──┼── 33      ──┼── 34    ──╮╭── 35    ──┼── 36     ──┼── 37    ──┼── 38    ──┼── 39   ──┴──        ──╯
                &trans       &trans       &trans       &trans        &trans       &trans      &trans       &trans      &trans      &trans     >; };
//              ╰──        ──┴──        ──┴──        ──┴──         ──┴──       ──╯╰──       ──┴──        ──┴──       ──┴──       ──┴──      ──╯

//         layerTemplate { bindings = <
// //╭─00─       ──┬─01─      ──┬─02─      ──┬─03─      ──┬─04─       ──╮                        ╭─05─      ──┬─06─     ──┬─07─     ──┬─08─    ──┬─09─      ──╮
//   &trans        &trans       &trans       &trans       &trans                                 &trans       &trans      &trans      &trans     &trans
// //├─10─       ──┼─11─      ──┼─12─      ──┼─13─      ──┼─14─       ──┤                        ├─15─      ──┼─16─     ──┼─17─     ──┼─18─    ──┼─19─      ──┤
//   &trans        &trans       &trans       &trans       &trans                                 &trans       &trans      &trans      &trans     &trans
// //├─20─       ──┼─21─      ──┼─22─      ──┼─23─      ──┼─24─       ──┤                        ├─25─      ──┼─26─     ──┼─27─     ──┼─28─    ──┼─29─      ──┤
//   &trans        &trans       &trans       &trans       &trans                                 &trans       &trans      &trans      &trans     &trans
// //╰──         ──┼── 30     ──┼── 31     ──┼── 32     ──┼── 33      ──┼── 34    ──╮╭── 35    ──┼── 36     ──┼── 37    ──┼── 38    ──┼── 39   ──┴──        ──╯
//                 &trans       &trans       &trans       &trans        &trans       &trans      &trans       &trans      &trans      &trans     >; };
// //              ╰──        ──┴──        ──┴──        ──┴──         ──┴──       ──╯╰──       ──┴──        ──┴──       ──┴──       ──┴──      ──╯

    };
};
