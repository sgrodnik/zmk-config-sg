/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define LCSPC LCTRL SPACE
#define RCSPC RCTRL SPACE
#define hA    LGUI A
#define hS    LALT S
#define hD    LSHIFT D
#define hF    LCTRL F
#define hJ    RCTRL J
#define hK    RSHIFT K
#define hL    RALT L
#define hSEMI RGUI SEMI

/ {
    behaviors {

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            // retro-tap;
        };

        sm: space_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        swap: swapper {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <1>;
        };

    };
    
    combos {
        compatible = "zmk,combos";
        combo_esc   { timeout-ms = <50>; key-positions = <02 03>; bindings = <&kp ESC    >; };
        combo_bsp   { timeout-ms = <50>; key-positions = <11 12>; bindings = <&kp BSPC   >; };
        combo_ret   { timeout-ms = <50>; key-positions = <12 04>; bindings = <&kp RET    >; };
        combo_cut   { timeout-ms = <50>; key-positions = <20 21>; bindings = <&kp LC(X)  >; };
        combo_copy  { timeout-ms = <50>; key-positions = <21 22>; bindings = <&kp LC(INS)>; };
        combo_paste { timeout-ms = <50>; key-positions = <22 23>; bindings = <&kp LS(INS)>; };
    };

    keymap {
        compatible = "zmk,keymap";

        default0 {
           bindings = <
//╭── 00      ──┬── 01   ──┬── 02          ──┬── 03     ──┬── 04      ──╮                        ╭── 05        ──┬── 06       ──┬── 07        ──┬── 08   ──┬── 09       ──╮
    &kp Q         &kp W      &kp E             &kp R        &kp T                                  &kp Y           &kp U          &kp I           &kp O      &kp P
//├── 10      ──┼── 11   ──┼── 12          ──┼── 13     ──┼── 14      ──┤                        ├── 15        ──┼── 16       ──┼── 17        ──┼── 18   ──┼── 19       ──┤
    &hm hA        &hm hS     &hm hD            &hm hF       &kp G                                  &kp H           &hm hJ         &hm hK          &hm hL     &hm hSEMI
//├── 20      ──┼── 21   ──┼── 22          ──┼── 23     ──┼── 24      ──┼── 38    ──╮            ├── 25        ──┼── 26       ──┼── 27        ──┼── 28   ──┼── 29       ──┤
    &mt LSHFT Z   &kp X      &kp C             &kp V        &kp B         &swap                    &kp N           &kp M          &kp COMMA       &kp DOT   &mt RSHFT FSLH
//╰──         ──┼──      ──┴── 30          ──┼── 31     ──┼── 32      ──┼── 33    ──┤╭── 34    ──┼── 35        ──┼── 36       ──┼── 37        ──┼──      ──┴──          ──╯
                           &lt 2 &sk LS(LCTRL)  &lt 2 CAPS   &lt 2 TAB    &lt 1 SPACE &lt 1 SPACE &lt 2 &sk RCTRL &lt 2 &sk RALT &lt 2 &sk RSHFT
//                         ╰──             ──┴──        ──┴──         ──┴──       ──╯╰──       ──┴──           ──┴──          ──┴──           ──╯
            >;
        };
        numbers1 {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  1  |    2   |  3     |  4  |  5  | |  6  |  7  |  8  |  9  |  0  |
// TAB | BT_PRV | BT_NXT | VOL-| VOL+| |  <  |  v  |  ∧  |  >  |  '  |
// Lsft| BT_SEL0| BT_CLR | MUTE|     | | HOME| END | PGUP| PGDN| Rsft|
//               | LCTL | LMOD| LALT | | Num |     | BL-reset |
           bindings = <
    &kp N1    &kp N2       &kp N3     &kp N4       &kp N5                         &kp N6      &kp N7    &kp N8    &kp N9    &kp N0
    &kp TAB   &bt BT_PRV   &bt BT_NXT &kp C_VOL_DN &kp C_VOL_UP                   &kp LEFT    &kp DOWN  &kp UP    &kp RIGHT &kp SQT
    &kp LSHFT &bt BT_SEL 0 &bt BT_CLR &kp C_MUTE   &none        &kp HOME          &kp HOME    &kp END   &kp PG_UP &kp PG_DN &kp RSHFT
                           &kp LCTRL  &kp LGUI     &kp LALT     &trans      &none &bootloader &kp Q     &kp W
            >;
        };
        symbols2 {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ESC |  F1 |  F2 |  F3 |  F4 | | OUT_USB | OUT_BLE |        |  =  |  -   |
// CAPS|  F5 |  F6 |  F7 |  F8 | |    [    |    ]    |        |  `  |  \   |
// LSFT|  F9 | F10 | F11 | F12 | |         |         |        |     | RSFT |
//         | LCTL | LMOD| LALT | |  RESET  |         |   SYM  |
           bindings = <
            &kp ESC &kp F1 &kp F2 &kp F3 &kp F4 &out OUT_USB &out OUT_BLE &none  &kp EQUAL &kp MINUS
            &kp CAPS &kp F5 &kp F6 &kp F7 &kp F8 &kp LBKT &kp RBKT &none &kp GRAVE &kp BSLH
            &kp LSHFT &kp F9 &kp F10 &kp F11 &kp F12 &none  &none &none &none &none &kp RSHFT
            &kp LCTRL &kp LGUI &kp LALT &sys_reset &none &trans &kp Q &kp W
           >;
        };
    };
};
